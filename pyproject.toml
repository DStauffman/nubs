[build-system]
requires = ["setuptools>=77.0"]
build-backend = "setuptools.build_meta"

[project]
name = "nubs"
version = "1.3.0"
description = "Makes dealing with optional numba JIT easier."
readme = "README.rst"
dependencies = []
requires-python = ">=3.10,<4.0"
authors = [
  {name = "David C. Stauffer", email = "dstauffman@yahoo.com"},
]
maintainers = [
  {name = "David C. Stauffer", email = "dstauffman@yahoo.com"},
]
license = { file = "LICENSE" }
keywords = ["numba", "jit", "compile", "aot"]
classifiers = [
    "Topic :: Software Development",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Langauge :: Python :: 3.10",
    "Programming Langauge :: Python :: 3.11",
    "Programming Langauge :: Python :: 3.12",
    "Programming Langauge :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[project.optional-dependencies]
static = ["black>=25.0", "flake8>=6.0", "isort>=5.10", "mypy>=1.5", "pycodestyle>=2.10", "pylint>=2.16"]
test = ["pytest>=7.4", "pytest-cov>=4.0"]

[project.urls]
Repository = "https://github.com/DStauffman/nubs"
Issues = "https://github.com/DStauffman/nubs/issues"
Changelog = "https://github.com/DStauffman/nubs/blob/main/CHANGELOG.md"

[project.scripts]
nubs = "nubs.cli:main"

[tool.setuptools.package-data]
nubs = ["CHANGELOG.md", "LICENSE.txt", "pyproject.toml", "README.rst", "setup.cfg"]

[tool.bandit]
skips = ["B101"]

[tool.black]
line-length = 128
target_version = ["py310", "py311", "py312"]

[tool.coverage.run]
branch = true
omit = ["*/site-packages/*", "*/.eggs/*"]
disable_warnings = ["couldnt-parse"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Create platform independent pragmas (potentially have the test runner modify this)
    "pragma: noc unix",
    #"pragma: noc windows",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    "def _main",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if False:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",

    # Don't complain about typing overloads
    "@overload"
]
ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.coverage.xml]
output = "coverage_html_report/coverage.xml"

[tool.isort]
py_version = 312
profile = "black"
line_length = 128
combine_as_imports = true
force_sort_within_sections = true
case_sensitive = true
force_alphabetical_sort_within_sections = true
skip_glob = ["__init__.py", "*/__init__.py"]

[tool.mypy]
show_error_codes       = true
warn_return_any        = true
warn_unused_configs    = true
warn_unreachable       = true
warn_unused_ignores    = true
disallow_untyped_calls = true
disallow_untyped_defs  = true
no_implicit_optional   = true
files                  = ["$MYPY_CONFIG_FILE_DIR/nubs/**/*.py"]

[[tool.mypy.overrides]]
module = [
    "numba.*",
]
ignore_missing_imports = true

[tool.pylint.messages_control]
max-line-length = 128
disable = ["C0103", "C0301", "C0411", "C0414", "E0401", "E0601", "E0606", "E0611", "E1101", "R0401", "R0402", "R0801", "R0902", "R0903", "R0912", "R0913", "R0914", "R0915", "W0511", "W0702"]
enable = ["I0021"]
ignore-paths = "^(.*[/\\\\]|)tests[/\\\\]test_.*$"

[tool.pydocstyle]
inherit = false
convention = "numpy"
add-ignore = ["D102", "D105", "D204"]
